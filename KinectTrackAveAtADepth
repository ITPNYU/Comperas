import SimpleOpenNI.*;
//you have to install SimpleOpenNI Library
//on a mac only works with old kinect and 1414 firmware

SimpleOpenNI context;
int aveX;
int aveY;
int threshold = 700;

void setup() {
  // startup the kinnect
  size(640, 480);
  context = new SimpleOpenNI(this);
  context.enableDepth();
}

void draw() {
  background(255);
  loadPixels();
  //listne to the kinect
  context.update();

  int[ ] allDepths = new int[640*480];
  context.depthMap(allDepths );
  //what is the x y of the closes pixel to the camera

   
  int pointsWithInThreshold = 0;  
  int sumX  = 0;
  int sumY = 0;
  for (int row = 0; row < 480; row++) {
    for (int col = 0; col < 640; col++) {
      int placeInBigArray = row*640 + col;
      if (allDepths[placeInBigArray] < threshold && allDepths[placeInBigArray] != 0 ) {
        sumX = sumX + col;
        sumY = sumY + row;
       pointsWithInThreshold++;
       //mark all the qualifying pixels with black
       //adjust threshold until only the ones you want are black
       pixels[placeInBigArray] = color(0,0,0); 
      }
    }
  }
 // PImage myImg = context.depthImage();
  //image(myImg, 0, 0);
 
  if (pointsWithInThreshold > 0){
  aveX = sumX/pointsWithInThreshold;
  aveY = sumY/pointsWithInThreshold;
  updatePixels();
   fill(255, 0, 0);
  ellipse(aveX, aveY, 20, 20);
  }
}

void  keyPressed(){
  if (key == 't'){
    threshold--;
  }else if (key == 'T'){
    threshold++;
  }
  println("Threshold " + threshold);
}
